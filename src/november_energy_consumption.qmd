---
title: "November Energy Report"
format:
  html:
    code-fold: true
    toc: true
    number-sections: true
    theme: zephyr
    embed-resources: true
  gfm: default
jupyter: python3
---

```{python}
import pandas as pd
from great_tables import GT, md
from EnergyConsumption import EnergyConsumption
```

## Calculate yearly energy consumption
```{python}
energy_consumption = EnergyConsumption()
```

### VREG API
Based on the default inputs, the VREG estimates a yearly consumption as indicated below.
```{python}
df_VREG = pd.DataFrame(data = {
  'Day': [energy_consumption.default_VREG['Day']],
  'Night': [energy_consumption.default_VREG['Night']],
  'Gas': [energy_consumption.default_VREG['Gas']]})

(
    GT(df_VREG)
    .tab_header(
        title=md("Estimated yearly consumption based on VREG"),
        subtitle=md("*In kWh*"),
    )
    .cols_label(
        Day="Electricity Day",
        Night="Electricity Night",
        Gas="Gas",
    )
    .cols_align("center")
    .fmt_integer(sep_mark='.')
)
```

### Energy consumption pattern - extrapolated

In case no full history of the energy consumption is available, data will be extrapolated based on the below pattern. This is the actual consumption of a house in Belgium.

```{python}
energy_consumption.plot_default_consumption_pattern('Gas')
energy_consumption.plot_default_consumption_pattern('Day')
energy_consumption.plot_default_consumption_pattern('Night')
```

Applying the pattern to the last 12 months, we can calculate the yearly consumption.
```{python}
energy_consumption.plot_forecasted_consumption_data('Gas')
energy_consumption.plot_forecasted_consumption_data('Day')
energy_consumption.plot_forecasted_consumption_data('Night')
```

```{python}
# Calculate yearly consumption based on forecasted data
forecasted_yearly_consumption = energy_consumption.get_forecasted_consumption_last_12_months()

df_consumption = pd.DataFrame(data = {
  'Day': [forecasted_yearly_consumption['Day']],
  'Night': [forecasted_yearly_consumption['Night']],
  'Gas': [forecasted_yearly_consumption['Gas']]})

(
    GT(df_consumption)
    .tab_header(
        title=md("Forecasted yearly consumption based on user input"),
        subtitle=md("*In kWh*"),
    )
    .cols_label(
        Day="Electricity Day",
        Night="Electricity Night",
        Gas="Gas",
    )
    .cols_align("center")
    .fmt_integer(sep_mark='.')
)
```

### Energy consumption pattern - actuals
The following energy consumption was inputted by the user. 
```{python}
energy_consumption.plot_actual_consumption_data('Gas')
energy_consumption.plot_actual_consumption_data('Day')
energy_consumption.plot_actual_consumption_data('Night')
```

Extracting the data from the last 12 months, we can calculate the yearly consumption. 
```{python}
# Calculate yearly consumption based on actuals
yearly_consumption = energy_consumption.get_actual_consumption_last_12_months()

df_consumption = pd.DataFrame(data = {
  'Day': [yearly_consumption['Day']],
  'Night': [yearly_consumption['Night']],
  'Gas': [yearly_consumption['Gas']]})

(
    GT(df_consumption)
    .tab_header(
        title=md("Actual yearly consumption based on user input"),
        subtitle=md("*In kWh*"),
    )
    .cols_label(
        Day="Electricity Day",
        Night="Electricity Night",
        Gas="Gas",
    )
    .cols_align("center")
    .fmt_integer(sep_mark='.')
)
```

### Result
```{python}
# Calculation method
method = energy_consumption.get_consumption_data_calculation()
print('Calculation method:')
print(method)

consumption = energy_consumption.get_total_consumption_data()

df_consumption = pd.DataFrame(data = {
  'Day': [yearly_consumption['Day']],
  'Night': [yearly_consumption['Night']],
  'Gas': [yearly_consumption['Gas']]})

(
    GT(df_consumption)
    .tab_header(
        title=md("Yearky consumption based on " + method),
        subtitle=md("*In kWh*"),
    )
    .cols_label(
        Day="Electricity Day",
        Night="Electricity Night",
        Gas="Gas",
    )
    .cols_align("center")
    .fmt_integer(sep_mark='.')
)

```